version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # Configuração do ACME com HTTP Challenge (padrão)
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL} # Definido no .env
      - --certificatesresolvers.letsencrypt.acme.storage=/acme.json
      - --api.dashboard=true
      - --api.insecure=false
    ports:
      - "80:80"     # Obrigatório para HTTP Challenge
      - "443:443"   # HTTPS
      - "8080:8080" # Dashboard (opcional)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme.json:/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`traefik.kodexis.cloud`)"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"  
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$sua_senha_hash$$" # Substitua!

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    env_file:
      - .env
    environment:
      - QUEUE_BULL_REDIS_HOST=redis-server
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_PASSWORD=
      - QUEUE_BULL_REDIS_USERNAME=
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - redis
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.rule=Host(`n8n.kodexis.cloud`)"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  n8n-worker-1:
    image: n8nio/n8n
    env_file:
      - .env
    environment:
      - QUEUE_BULL_REDIS_HOST=redis-server
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=0
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_PASSWORD=
      - QUEUE_BULL_REDIS_USERNAME=
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    command: worker
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - n8n

  redis:
    image: redis:alpine
    container_name: redis-server
    restart: always
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  postgres:
    image: ankane/pgvector:latest
    container_name: postgres_pgvector
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  evolution-api:
    container_name: evolution_api
    image: atendai/evolution-api:homolog
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    environment:
      - CACHE_REDIS_ENABLED=true
      - CACHE_REDIS_URI=redis://redis-server:6379/1
      - CACHE_REDIS_PREFIX_KEY=evolution
      - CACHE_REDIS_SAVE_INSTANCES=false
      - CACHE_LOCAL_ENABLED=false
    volumes:
      - evolution_instances:/evolution/instances
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.evolution-api.entrypoints=websecure"
      - "traefik.http.routers.evolution-api.rule=Host(`whatsapp.kodexis.cloud`)"
      - "traefik.http.routers.evolution-api.tls.certresolver=letsencrypt"  
      - "traefik.http.services.evolution-api.loadbalancer.server.port=8080"

volumes:
  n8n_data:
  redis_data:
  evolution_instances: